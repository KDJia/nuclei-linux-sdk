variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GET_SOURCES_ATTEMPTS: 5
    GIT_STRATEGY: fetch

before_script:
    - module load nucleisys/openocd
    - module load common

stages:
    - build_ux600
    - build_ux600fd
    - run_ux600
    - run_ux600fd
    - deploy

## Job template for build linux sdk
.build_linux_sdk_template: &build_linux_sdk_job_def
    only:
        changes:
          - conf/*
          - Makefile
          - .gitlab-ci.yml
          - buildroot
          - freeloader
          - linux
          - u-boot
    artifacts:
        name: "bootimages-${CI_COMMIT_SHA::8}"
        paths:
            - work/boot.zip
            - work/opensbi/platform/nuclei/ux600/firmware/*.elf
            - freeloader/freeloader.elf
        expire_in: 2 day
    tags:
        - software-server
    script:
        - echo ">>Show help message for $CORE" && make help
        - |
            echo ">>Build buildroot_initramfs_sysroot for $CORE" && 
            make buildroot_initramfs_sysroot > >(tee build_sysroot.log |grep '>>>') || {
                echo 'Show last 200 lines of build log'
                tail -n 200 build_sysroot.log
                xz -z build_sysroot.log
                exit 1
            }
        - echo ">>Build freeloader for $CORE" &&  make freeloader
        - |
            echo ">>Build and generate boot images for $CORE" && 
            make preboot && make bootimages
        - |
            echo ">>Build simulation target for $CORE" &&
            make presim && make opensbi_sim

## Job template for run linux in xlspike
.run_linux_sdk_template: &run_linux_sdk_job_def
    tags:
        - software-server
    script:
        - |
            echo ">>Run using xlspike for $CORE" &&
            timeout --foreground -s SIGKILL 5m xl_spike work/opensbi/platform/nuclei/ux600/firmware/fw_payload.elf > >(tee run_xlspike.log) || {
                cat run_xlspike.log | grep "Run /init" ; then echo "Kernel boot successfully" ; else echo "Kernel boot failed" && exit 1; fi; 
                cat run_xlspike.log | grep "Welcome to" ; then echo "Pass simulation" && exit 0; else echo "Failed init process" && exit 1; fi; 
            }

## Job for build sdk
# Build For UX600 Core, without FPU
build_ux600:
    stage: build_ux600
    variables:
        CORE: "ux600"
    <<: *build_linux_sdk_job_def


## Job for run sim
# Run For UX600 Core, without FPU
run_ux600:
    stage: run_ux600
    dependencies:
        - build_ux600
    variables:
        CORE: "ux600"
    <<: *run_linux_sdk_job_def


## Job for build sdk
# Build For UX600FD Core, with FPU
build_ux600fd:
    stage: build_ux600fd
    variables:
        CORE: "ux600fd"
    <<: *build_linux_sdk_job_def

## Job for run sim
# Run For UX600FD Core, with FPU
run_ux600fd:
    stage: run_ux600fd
    dependencies:
        - build_ux600fd
    variables:
        CORE: "ux600fd"
    <<: *run_linux_sdk_job_def
